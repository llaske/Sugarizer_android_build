var PollCard={template:'\n\t\t<div class="poll-card" :class="{ \'settings-active\': settings }" @click="onPollClick()">\n\t\t\t<div class="settings-row">\n\t\t\t\t<transition name="settings-zoom">\n\t\t\t\t\t<button id="edit-button" @click="onEditClick" v-if="settings"></button>\n\t\t\t\t</transition>\n\t\t\t\t<transition name="settings-zoom">\n\t\t\t\t\t<button id="delete-button" @click.stop="onDeleteClick" v-if="settings"></button>\n\t\t\t\t</transition>\n\t\t\t</div>\n\t\t\t<div class="poll-image">\n\t\t\t\t<img :src="poll.image">\n\t\t\t\t<img src="lib/sugar-web/graphics/icons/actions/zoom-neighborhood.svg" class="share-icon">\n\t\t\t</div>\n\t\t\t<div class="poll-details">\n\t\t\t\t<h3 class="poll-title">{{ poll.question }}</h3>\n\t\t\t\t<p class="poll-type">{{ poll.type }}</p>\n\t\t\t</div>\n\t\t</div>\n\t',props:["poll","settings"],methods:{onPollClick(){this.settings||this.$emit("poll-clicked",this.poll.id)},onEditClick:function(){this.$emit("edit-clicked",this.poll.id)},onDeleteClick:function(){this.$emit("delete-clicked",this.poll.id)}}},PollsGrid={template:'\n\t\t<div>\n\t\t\t<draggable \n\t\t\t\tclass="polls-grid" \n\t\t\t\t:class="{ fullscreen: $root.$refs.SugarToolbar ? $root.$refs.SugarToolbar.isHidden() : false }"\n\t\t\t\t:style="{ backgroundColor: currentUser.colorvalue.fill }" \n\t\t\t\tv-model="polls" \n\t\t\t\t@update="onUpdate" \n\t\t\t\t:disabled="!settings" \n\t\t\t\t:animation="300"\n\t\t\t>\n\t\t\t\t<poll-card \n\t\t\t\t\t:poll="poll" \n\t\t\t\t\t:id="i"\n\t\t\t\t\tv-show="matchesSearch(poll.question)"\n\t\t\t\t\tv-for="(poll, i) in polls" \n\t\t\t\t\t:key="poll.id"\n\t\t\t\t\t:settings="settings"\n\t\t\t\t\t@poll-clicked="onPollClick"\n\t\t\t\t\t@edit-clicked="onEditPollClick"\n\t\t\t\t\t@delete-clicked="deletePoll"\n\t\t\t\t></poll-card>\n\t\t\t</draggable>\n\t\t</div>\n\t',components:{"poll-card":PollCard},props:["polls","searchQuery","currentUser","settings"],methods:{matchesSearch(t){var l=new RegExp(this.searchQuery,"i");return-1!=t.search(l)},onPollClick(t){this.$emit("start-poll",t)},onUpdate:function(t){this.$emit("update-polls",this.polls)},onEditPollClick:function(t){this.$emit("edit-poll",t)},deletePoll:function(t){var l=this.polls.findIndex((function(l){return l.id==t}));this.polls.splice(l,1)}}};