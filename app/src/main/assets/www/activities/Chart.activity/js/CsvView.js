const CsvView={template:'\n\t\t<div ref="csvView" class="csv-view">\n\t    \t<div class="csv-container">\n\t\t\t\t<div class="cell-group csv-header">\n\t\t\t\t\t<span class="marker">1</span>\n\t\t\t\t\t<div v-for="(key, i) in jsonData.header" :key="\'header\'+i" :id="\'header\'+i" @click="selectedIdx = i" :class="{active: isActive(i), invalid: isInvalid(i), last: !jsonData.data[1]}" class="cell">\n\t\t\t\t\t\t{{ key.startsWith("__") ? "" : key }}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div v-for="(dataRow, i) in jsonData.data" :key="\'row\'+i" class="cell-group">\n\t\t\t\t\t<span class="marker">{{ i+2 }}</span>\n\t\t\t\t\t<div v-for="(key, j) in jsonData.header" :key="\'col\'+j" @click="selectedIdx = j" :class="{active: isActive(j), last: i == jsonData.data.length-1}" class="cell">\n\t\t\t\t\t\t{{ dataRow[key] }}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t    \t</div>\n\t\t\t<div class="toolbar swap-fields">\n\t\t\t\t<button id="up-button" class="toolbutton" @click="swapLeft"></button>\n\t\t\t\t<button id="down-button" class="toolbutton" @click="swapRight"></button>\n\t\t\t</div>\n\t\t</div>\n    ',props:["jsonData"],data:()=>({selectedIdx:0,invalid:!1}),methods:{swapRight(){const t=this.jsonData.header;let a=this.selectedIdx;!t.length||a>t.length-2||(this.$emit("swap-data",a,a+1),this.selectedIdx++)},swapLeft(){let t=this.selectedIdx;t<1||(this.$emit("swap-data",t,t-1),this.selectedIdx--)},updateTableData(){const t=this.jsonData.header[0],a=this.jsonData.header[1];void 0!==t&&this.$emit("data-change","label",t),void 0===a||this.invalidKeys.includes(a)?this.invalid=!0:(this.invalid=!1,this.$emit("data-change","value",a))},updateJsonData(t,a,s,e){s&&(t=t.map((t=>{const s={};return Object.keys(t).forEach(((e,i)=>{void 0!==a[i]&&(s[a[i]]=t[e])})),s}))),this.jsonData.data=t,this.jsonData.header=a,e?this.invalid=this.invalidKeys.includes(this.jsonData.header[1]):this.updateTableData()},isActive(t){return this.selectedIdx===t},isInvalid(t){return 1===t&&this.invalid}},computed:{invalidKeys(){const t=[];for(const a of this.jsonData.header)for(const s of this.jsonData.data)if("string"==typeof s[a]&&s[a].match(/[^0-9.\-,]/g)){t.push(a);break}return t}}};