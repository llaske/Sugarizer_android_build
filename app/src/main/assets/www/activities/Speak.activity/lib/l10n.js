let l10ndefine=function(e,n){const t={language:{direction:"ltr"}};function triggerLocalizedEvent(){if("undefined"==typeof module){const e=new Event("localized");window.dispatchEvent(e)}}return t.init=async n=>{await e.init({lng:n,fallbackLng:"en",resources:{}}).then((()=>{t.language.direction=e.dir(),t.switchTo(n)}))},t.get=(n,t)=>e.t(n,t),t.loadLanguageResource=e=>new Promise(((t,a)=>{if("undefined"==typeof module)n.get("./locales/"+e+".json").then((e=>{t(e.data)})).catch((n=>{console.log("Failed to load "+e+" language: "+n),t(null)}));else{require("fs").readFile("./locales/"+e+".json",((n,a)=>{n?(console.log("Failed to load "+e+" language: "+n),t(null)):t(JSON.parse(a))}))}})),t.switchTo=n=>{e.hasResourceBundle(n,"translation")?(e.changeLanguage(n),triggerLocalizedEvent()):(console.log("Loading "+n+" language"),t.loadLanguageResource(n).then((a=>{null!==a?(e.addResourceBundle(n,"translation",a),e.changeLanguage(n),triggerLocalizedEvent()):t.init("en")})))},t.updateDocument=()=>{const n=document.getElementsByTagName("*");for(let t=0;t<n.length;t++){const a=n[t],l=a.getAttribute("data-i18n");null!==l&&(a.innerHTML=e.t(l))}},t};if("undefined"!=typeof module){let e=require("i18next"),n=require("axios");module.exports=l10ndefine(e,n)}else define(["i18next.min","axios.min"],l10ndefine);