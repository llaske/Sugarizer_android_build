import{Scope}from"parchment";import Quill from"../core/quill";import Module from"../core/module";class History extends Module{constructor(t,e){super(t,e),this.lastRecorded=0,this.ignoreChange=!1,this.clear(),this.quill.on(Quill.events.EDITOR_CHANGE,((t,e,s,n)=>{t!==Quill.events.TEXT_CHANGE||this.ignoreChange||(this.options.userOnly&&n!==Quill.sources.USER?this.transform(e):this.record(e,s))})),this.quill.keyboard.addBinding({key:"z",shortKey:!0},this.undo.bind(this)),this.quill.keyboard.addBinding({key:"z",shortKey:!0,shiftKey:!0},this.redo.bind(this)),/Win/i.test(navigator.platform)&&this.quill.keyboard.addBinding({key:"y",shortKey:!0},this.redo.bind(this))}change(t,e){if(0===this.stack[t].length)return;const s=this.stack[t].pop(),n=this.quill.getContents(),i=s.invert(n);this.stack[e].push(i),this.lastRecorded=0,this.ignoreChange=!0,this.quill.updateContents(s,Quill.sources.USER),this.ignoreChange=!1;const o=getLastChangeIndex(this.quill.scroll,s);this.quill.setSelection(o)}clear(){this.stack={undo:[],redo:[]}}cutoff(){this.lastRecorded=0}record(t,e){if(0===t.ops.length)return;this.stack.redo=[];let s=t.invert(e);const n=Date.now();if(this.lastRecorded+this.options.delay>n&&this.stack.undo.length>0){const t=this.stack.undo.pop();s=s.compose(t)}else this.lastRecorded=n;0!==s.length()&&(this.stack.undo.push(s),this.stack.undo.length>this.options.maxStack&&this.stack.undo.shift())}redo(){this.change("redo","undo")}transform(t){transformStack(this.stack.undo,t),transformStack(this.stack.redo,t)}undo(){this.change("undo","redo")}}function transformStack(t,e){let s=e;for(let e=t.length-1;e>=0;e-=1){const n=t[e];t[e]=s.transform(n,!0),s=n.transform(s),0===t[e].length()&&t.splice(e,1)}}function endsWithNewlineChange(t,e){const s=e.ops[e.ops.length-1];return null!=s&&(null!=s.insert?"string"==typeof s.insert&&s.insert.endsWith("\n"):null!=s.attributes&&Object.keys(s.attributes).some((e=>null!=t.query(e,Scope.BLOCK))))}function getLastChangeIndex(t,e){const s=e.reduce(((t,e)=>t+(e.delete||0)),0);let n=e.length()-s;return endsWithNewlineChange(t,e)&&(n-=1),n}History.DEFAULTS={delay:1e3,maxStack:100,userOnly:!1};export{History as default,getLastChangeIndex};