define(["lib/i18next.min.js","lib/axios.min.js"],(function(e,t){const n={language:{direction:"ltr"}};function triggerLocalizedEvent(){const e=new Event("localized");window.dispatchEvent(e)}return n.init=async t=>{await e.init({lng:t,fallbackLng:"en",resources:{}}).then((()=>{n.language.direction=e.dir(),n.switchTo(t)}))},n.get=(t,n,a)=>(void 0!==a?e.setDefaultNamespace(a):e.setDefaultNamespace("translation"),e.t(t,n)),n.loadLanguageResource=e=>new Promise(((n,a)=>{let l="locales/";"file:"===location.protocol&&(l="locales/"),t.get(l+e+".json").then((e=>{n(e.data)})).catch((t=>{console.log("Failed to load "+e+" language: "+t),n(null)}))})),n.switchTo=t=>{e.hasResourceBundle(t,"translation")?(e.changeLanguage(t),triggerLocalizedEvent()):(console.log("Loading "+t+" language"),n.loadLanguageResource(t).then((a=>{null!==a?(e.addResourceBundle(t,"translation",a),e.changeLanguage(t),triggerLocalizedEvent()):n.init("en")})))},n.loadExternalResource=(n,a)=>new Promise(((l,o)=>{t.get(a+"/"+e.language+".json").then((t=>{e.addResourceBundle(e.language,n,t.data),l(t.data)})).catch((t=>{console.log("Failed to load "+a+"/"+e.language+".json "+t),l(null)}))})),n.getLanguage=()=>e.language,n.updateDocument=()=>{const t=document.getElementsByTagName("*");for(let n=0;n<t.length;n++){const a=t[n],l=a.getAttribute("data-i18n");null!==l&&e.exists(l)&&(a.innerHTML=e.t(l)),null!==l&&e.exists(l+".title")&&a.setAttribute("title",e.t(l+".title"))}},n}));