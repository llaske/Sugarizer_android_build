let backColor2,color2,p=(1+Math.sqrt(5))/2,q=1/p,vertices2=[[0,q,p],[0,q,-p],[0,-q,p],[0,-q,-p],[p,0,q],[p,0,-q],[-p,0,q],[-p,0,-q],[q,p,0],[q,-p,0],[-q,p,0],[-q,-p,0],[1,1,1],[1,1,-1],[1,-1,1],[1,-1,-1],[-1,1,1],[-1,1,-1],[-1,-1,1],[-1,-1,-1]],faces2=[[2,14,4,12,0,1],[15,9,11,19,3,2],[16,10,17,7,6,3],[6,7,19,11,18,4],[6,18,2,0,16,5],[18,11,9,14,2,6],[1,17,10,8,13,7],[1,13,5,15,3,8],[13,8,12,4,5,9],[5,4,14,9,15,10],[0,12,8,10,16,11],[3,19,7,17,1,12]],scaleFactor2=1.5,values2=12,faceTexts2=[" ","0","1","2","3","4","5","6","7","8","9","10","11","12","13","14","15","16","17","18","19","20"],textMargin2=1,chamfer2=.968,af2=-Math.PI/4/2,tab2=.2;function createDodecahedron(e,t,a,l,n,r,o,c,s,i,h,u,f,N,g,w,m,d,A){let y,C=null==t?h.showNumbers:t,E=null==a?h.toggleTransparent:a,M=null!=e?e:h.presentColor,T=null!=i?i:h.textColor;if(backColor2=M,color2=T,C)y=new THREE.Mesh(getGeometry2(),getMaterials2());else if(E){const t=getGeometry2(),a=new THREE.WireframeGeometry(t),l=new THREE.LineBasicMaterial({color:null!=e?e:h.presentColor,depthTest:!0,opacity:1,transparent:!1});y=new THREE.LineSegments(a,l)}else{const t=getGeometry2(),a=new THREE.MeshStandardMaterial({color:null!=e?e:h.presentColor,wireframe:!1});y=new THREE.Mesh(t,a)}y.rotation.set(Math.PI/4,Math.PI/4,0),y.castShadow=!0,y.userData=A,N.add(y);const V=1.618,b=.618;let O=.83;const x=[new CANNON.Vec3(-1,-1,-1).scale(O),new CANNON.Vec3(-1,-1,1).scale(O),new CANNON.Vec3(-1,1,-1).scale(O),new CANNON.Vec3(-1,1,1).scale(O),new CANNON.Vec3(1,-1,-1).scale(O),new CANNON.Vec3(1,-1,1).scale(O),new CANNON.Vec3(1,1,-1).scale(O),new CANNON.Vec3(1,1,1).scale(O),new CANNON.Vec3(0,-b,-V).scale(O),new CANNON.Vec3(0,-b,V).scale(O),new CANNON.Vec3(0,b,-V).scale(O),new CANNON.Vec3(0,b,V).scale(O),new CANNON.Vec3(-b,-V,0).scale(O),new CANNON.Vec3(-b,V,0).scale(O),new CANNON.Vec3(b,-V,0).scale(O),new CANNON.Vec3(b,V,0).scale(O),new CANNON.Vec3(-V,0,-b).scale(O),new CANNON.Vec3(V,0,-b).scale(O),new CANNON.Vec3(-V,0,b).scale(O),new CANNON.Vec3(V,0,b).scale(O)];new CANNON.ConvexPolyhedron({vertices:x,faces:[[3,11,7],[3,7,15],[3,15,13],[7,19,17],[7,17,6],[7,6,15],[17,4,8],[17,8,10],[17,10,6],[8,0,16],[8,16,2],[8,2,10],[0,12,1],[0,1,18],[0,18,16],[6,10,2],[6,2,13],[6,13,15],[2,16,18],[2,18,3],[2,3,13],[18,1,9],[18,9,11],[18,11,3],[4,14,12],[4,12,0],[4,0,8],[11,9,5],[11,5,19],[11,19,7],[19,5,14],[19,14,4],[19,4,17],[1,12,14],[1,14,5],[1,5,9]]});let R=null==l?xCoordinate:l,H=null==n?zCoordinate:n,S=null==c?4:1;const v=new CANNON.Body({mass:2,shape:myShape,position:new CANNON.Vec3(R,S,H),material:new CANNON.Material,restitution:.3});v.sleepSpeedLimit=.2,v.sleepTimeLimit=3,v.linearDamping=.1,v.angularDamping=.1,f.addBody(v),null!=l&&v.sleep();const G=new CANNON.ContactMaterial(g,v.material,{friction:h.friction});f.addContactMaterial(G);let I=null==w?.9*Math.random()+.1:w,B=null==m?.9*Math.random()+.1:m,P=null==d?.9*Math.random()+.1:d;v.angularVelocity.set(I,B,P),v.applyImpulse(h.offset,h.rollingForce),y.position.copy(v.position),y.quaternion.copy(v.quaternion),null!=s&&(y.quaternion.copy(s),v.quaternion.copy(s)),u.push([y,v,"dodeca",C,E,M,T,I,B,P,G])}function getGeometry2(){let e=1*scaleFactor2,t=new Array(vertices2.length);for(let e=0;e<vertices2.length;++e)t[e]=(new THREE.Vector3).fromArray(vertices2[e]).normalize();let a=getChamferGeometry2(t),l=makeGeometry2(a.vectors,a.faces2,e,tab2,af2);return myShape=createShape(t,faces2,e),l}function getChamferGeometry2(e){let t=[],a=[],l=new Array(e.length);for(let t=0;t<e.length;++t)l[t]=[];for(let n=0;n<faces2.length;++n){let r=faces2[n],o=r.length-1,c=new THREE.Vector3,s=new Array(o);for(let a=0;a<o;++a){let n=e[r[a]].clone();c.add(n),l[r[a]].push(s[a]=t.push(n)-1)}c.divideScalar(o);for(let e=0;e<o;++e){let a=t[s[e]];a.subVectors(a,c).multiplyScalar(chamfer2).addVectors(a,c)}s.push(r[o]),a.push(s)}for(let e=0;e<faces2.length-1;++e)for(let t=e+1;t<faces2.length;++t){let l=[],n=-1;for(let a=0;a<faces2[e].length-1;++a){let r=faces2[t].indexOf(faces2[e][a]);r>=0&&r<faces2[t].length-1&&(n>=0&&a!==n+1?l.unshift([e,a],[t,r]):l.push([e,a],[t,r]),n=a)}4===l.length&&a.push([a[l[0][0]][l[0][1]],a[l[1][0]][l[1][1]],a[l[3][0]][l[3][1]],a[l[2][0]][l[2][1]],-1])}for(let e=0;e<l.length;++e){let t=l[e],n=[t[0]],r=t.length-1;for(;r;){for(let e=faces2.length;e<a.length;++e){let l=a[e].indexOf(n[n.length-1]);if(l>=0&&l<4){-1==--l&&(l=3);let r=a[e][l];if(t.indexOf(r)>=0){n.push(r);break}}}--r}n.push(-1),a.push(n)}return{vectors:t,faces2:a}}function makeGeometry2(e,t,a){let l=new THREE.BufferGeometry;for(let t=0;t<e.length;++t)e[t]=e[t].multiplyScalar(a);let n=[];const r=[],o=[],c=new THREE.Vector3,s=new THREE.Vector3;let i,h=0;for(let a=0;a<t.length;++a){let u=t[a],f=u.length-1,N=2*Math.PI/f;i=u[f]+1;for(let t=0;t<f-2;++t)n.push(...e[u[0]].toArray()),n.push(...e[u[t+1]].toArray()),n.push(...e[u[t+2]].toArray()),c.subVectors(e[u[t+2]],e[u[t+1]]),s.subVectors(e[u[0]],e[u[t+1]]),c.cross(s),c.normalize(),r.push(...c.toArray()),r.push(...c.toArray()),r.push(...c.toArray()),o.push((Math.cos(af2)+1+tab2)/2/(1+tab2),(Math.sin(af2)+1+tab2)/2/(1+tab2)),o.push((Math.cos(N*(t+1)+af2)+1+tab2)/2/(1+tab2),(Math.sin(N*(t+1)+af2)+1+tab2)/2/(1+tab2)),o.push((Math.cos(N*(t+2)+af2)+1+tab2)/2/(1+tab2),(Math.sin(N*(t+2)+af2)+1+tab2)/2/(1+tab2));let g=3*(f-2);for(let e=0;e<g/3;e++)l.addGroup(h,3,i),h+=3}return l.setAttribute("position",new THREE.Float32BufferAttribute(n,3)),l.setAttribute("normal",new THREE.Float32BufferAttribute(r,3)),l.setAttribute("uv",new THREE.Float32BufferAttribute(o,2)),l.boundingSphere=new THREE.Sphere(new THREE.Vector3,a),l}function createShape(e,t,a){let l=new Array(e.length),n=new Array(t.length);for(let t=0;t<e.length;++t){let n=e[t];l[t]=new CANNON.Vec3(n.x*a,n.y*a,n.z*a)}for(let e=0;e<t.length;++e)n[e]=t[e].slice(0,t[e].length-1);return new CANNON.ConvexPolyhedron({vertices:l,faces:n})}let myShape=null;function getMaterials2(){let e=[];for(let t=0;t<faceTexts2.length;++t){let a=null;a=createTextTexture2(faceTexts2[t]),e.push(new THREE.MeshPhongMaterial(Object.assign({},{map:a})))}return e}function createTextTexture2(e){let t=document.createElement("canvas"),a=t.getContext("2d"),l=2*calculateTextureSize(.5+1*textMargin2);t.width=t.height=l,a.font=l/(1+2*textMargin2)+"pt Arial",a.fillStyle=backColor2,a.fillRect(0,0,t.width,t.height),a.textAlign="center",a.textBaseline="middle",a.fillStyle=color2,a.fillText(e,t.width/2,t.height/2);let n=new THREE.Texture(t);return n.needsUpdate=!0,n}function calculateTextureSize(e){return Math.max(128,Math.pow(2,Math.floor(Math.log(e)/Math.log(2))))}function getDodecaScore(e,t,a){let l,n,r=new THREE.Vector3(0,1),o=2*Math.PI,c=t.geometry.getAttribute("normal").array;for(let e=0;e<t.geometry.groups.length;++e){let a=t.geometry.groups[e];if(0===a.materialIndex)continue;let n=9*e,s=new THREE.Vector3(c[n],c[n+1],c[n+2]).clone().applyQuaternion(t.quaternion).angleTo(r);s<o&&(o=s,l=a)}if(n=l.materialIndex-1==0?10:l.materialIndex-1,a)return n;e.lastRoll+=n+" + ",e.presentScore+=n}