function createTetrahedron(e,t,n,o,a,r,l,i,c,s,E,u,h,d,f,w,p,N,T){let m,y=null==t?E.showNumbers:t,M=null==n?E.toggleTransparent:n,R=null!=e?e:E.presentColor,C=null!=s?s:E.textColor;if(y){let e=new THREE.Vector2(4,5),t=512,n=new THREE.TetrahedronGeometry(1.7),o=document.createElement("canvas");document.createElement("div");o.width=t*e.x,o.height=t*e.y;let a=o.getContext("2d");a.fillStyle=R,a.fillRect(0,0,o.width,o.height);let r=[],l=[[.067,.25],[.933,.25],[.5,1]].map((e=>new THREE.Vector2(...e))),i=[[2,1,3],[1,2,4],[3,1,4],[2,3,4]];for(let n=0;n<4;n++){let c=n%e.x,s=Math.floor(n/e.x);r.push((l[0].x+c)/e.x,(l[0].y+s)/e.y,(l[1].x+c)/e.x,(l[1].y+s)/e.y,(l[2].x+c)/e.x,(l[2].y+s)/e.y),a.textAlign="center",a.textBaseline="middle",a.font="bold 150px Arial",a.fillStyle=C;let E=2*Math.PI/3,u=.5*Math.PI,h=.25*t;for(let e=0;e<3;e++)a.save(),a.translate((c+.5)*t+Math.cos(e*E-u)*h,o.height-(s+.5)*t+Math.sin(e*E-u)*h),a.rotate(e*Math.PI*2/3),a.fillText(i[n][e],0,0),a.restore()}n.setAttribute("uv",new THREE.Float32BufferAttribute(r,2));let c=new THREE.CanvasTexture(o);c.colorSpace=THREE.SRGBColorSpace;let s=new THREE.MeshPhongMaterial({map:c});m=new THREE.Mesh(n,s)}else if(M){const t=new THREE.TetrahedronGeometry(1.7),n=new THREE.WireframeGeometry(t),o=new THREE.LineBasicMaterial({color:null!=e?e:E.presentColor,depthTest:!0,opacity:1,transparent:!1});m=new THREE.LineSegments(n,o)}else{const t=new THREE.TetrahedronGeometry(1.7),n=new THREE.MeshStandardMaterial({color:null!=e?e:E.presentColor,wireframe:!1});m=new THREE.Mesh(t,n)}m.rotation.set(Math.PI/4,Math.PI/4,0),m.castShadow=!0,m.userData=T,d.add(m);const H=[new CANNON.Vec3(1,1,1),new CANNON.Vec3(-1,-1,1),new CANNON.Vec3(-1,1,-1),new CANNON.Vec3(1,-1,-1)],x=new CANNON.ConvexPolyhedron({vertices:H,faces:[[2,1,0],[0,3,2],[1,3,0],[2,3,1]]});let g=null==o?xCoordinate:o,v=null==a?zCoordinate:a,A=null==i?4:i;const V=new CANNON.Body({mass:2,shape:x,position:new CANNON.Vec3(g,A,v),material:new CANNON.Material,restitution:5});h.addBody(V);let S=null==w?.9*Math.random()+.1:w,O=null==p?.9*Math.random()+.1:p,P=null==N?.9*Math.random()+.1:N;const B=new CANNON.ContactMaterial(f,V.material,{friction:E.friction});h.addContactMaterial(B),V.angularVelocity.set(S,O,P),V.angularDamping=.1,V.applyImpulse(E.offset,E.rollingForce),m.position.copy(V.position),m.quaternion.copy(V.quaternion),null!=c&&null!=c&&(m.quaternion.copy(c),V.quaternion.copy(c)),u.push([m,V,"tetra",y,M,R,C,S,O,P,B])}function getTetraScore(e,t,n){const o=[{vector:new THREE.Vector3(1,1,1).normalize(),face:1},{vector:new THREE.Vector3(-1,-1,1).normalize(),face:3},{vector:new THREE.Vector3(-1,1,-1).normalize(),face:2},{vector:new THREE.Vector3(1,-1,-1).normalize(),face:4}];for(const a of o)if(a.vector.applyEuler(t.rotation),1==Math.round(a.vector.y)){if(!n){e.lastRoll+=a.face+" + ",e.presentScore+=a.face;break}return a.face}}