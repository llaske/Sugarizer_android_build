function createCube(e,t,n,o,l,r,a,c,i,E,s,u,f,w,h,p,T,R,d){let H,C=null==t?s.showNumbers:t,m=null==n?s.toggleTransparent:n,y=null!=e?e:s.presentColor,g=null!=E?E:s.textColor;if(C){let e=new THREE.Vector2(4,2),t=512,n=new THREE.BoxGeometry(2,2,2),o=document.createElement("canvas");o.width=t*e.x,o.height=t*e.y;let l=o.getContext("2d");l.fillStyle=y,l.fillRect(0,0,o.width,o.height);let r=[[0,1],[1,1],[0,0],[1,0]].map((e=>new THREE.Vector2(...e))),a=[];new THREE.Vector2,new THREE.Vector2(.5,.5);for(let n=0;n<6;n++){let c=n%e.x,i=Math.floor(n/e.x);r.forEach((t=>{a.push((t.x+c)/e.x,(t.y+i)/e.y)})),l.textAlign="center",l.textBaseline="middle",l.font="bold 300px Arial",l.fillStyle=g,l.fillText(n+1,(c+.5)*t,o.height-(i+.5)*t)}n.setAttribute("uv",new THREE.Float32BufferAttribute(a,2));let c=new THREE.CanvasTexture(o);c.colorSpace=THREE.SRGBColorSpace;let i=new THREE.MeshPhongMaterial({map:c});H=new THREE.Mesh(n,i)}else if(m){const t=new THREE.BoxGeometry(2,2,2),n=new THREE.WireframeGeometry(t),o=new THREE.LineBasicMaterial({color:null!=e?e:s.presentColor,depthTest:!0,opacity:1,transparent:!1});H=new THREE.LineSegments(n,o)}else{const t=new THREE.BoxGeometry(2,2,2),n=new THREE.MeshPhongMaterial({color:null!=e?e:s.presentColor,wireframe:!1});H=new THREE.Mesh(t,n)}H.castShadow=!0,H.userData=d,w.add(H);let N=null==o?xCoordinate:o,x=null==l?zCoordinate:l,M=null==c?10:c;const v=new CANNON.Body({mass:1,shape:createCubeShape([[-1,-1,-1],[1,-1,-1],[1,1,-1],[-1,1,-1],[-1,-1,1],[1,-1,1],[1,1,1],[-1,1,1]],[[0,3,2,1,1],[1,2,6,5,2],[0,1,5,4,3],[3,7,6,2,4],[0,4,7,3,5],[4,5,6,7,6]],1),position:new CANNON.Vec3(N,M,x),material:new CANNON.Material,restitution:5});f.addBody(v);let V=null==p?3.9*Math.random()+.1:p,A=null==T?3.9*Math.random()+.1:T,S=null==R?3.9*Math.random()+.1:R;v.angularVelocity.set(V,A,S),v.angularDamping=.1,v.applyImpulse(s.offset,s.rollingForce);const b=new CANNON.ContactMaterial(h,v.material,{friction:s.friction});f.addContactMaterial(b),null!=i&&null!=i&&(H.quaternion.copy(i),v.quaternion.copy(i)),u.push([H,v,"cube",C,m,y,g,V,A,S,b])}function getCubeScore(e,t,n){const o=[{vector:new THREE.Vector3(1,0,0),face:1},{vector:new THREE.Vector3(-1,0,0),face:2},{vector:new THREE.Vector3(0,1,0),face:3},{vector:new THREE.Vector3(0,-1,0),face:4},{vector:new THREE.Vector3(0,0,1),face:5},{vector:new THREE.Vector3(0,0,-1),face:6}];for(const l of o)if(l.vector.applyEuler(t.rotation),1==Math.round(l.vector.y))return n||(e.lastRoll+=l.face+" + ",e.presentScore+=l.face),l.face}function createCubeShape(e,t,n){let o=new Array(e.length),l=new Array(t.length);for(let t=0;t<e.length;++t){let l=e[t];o[t]=new CANNON.Vec3(l[0]*n,l[1]*n,l[2]*n)}for(let e=0;e<t.length;++e)l[e]=t[e].slice(0,t[e].length-1);return new CANNON.ConvexPolyhedron({vertices:o,faces:l})}