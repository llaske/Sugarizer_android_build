const TypingEffect={props:["usersTyping"],template:'\n\t\t<div class="loader-container">\n\t\t\t<div class="dots" v-if="Object.keys(usersTyping).length > 0">\n\t\t\t  <span class="dot"></span>\n\t\t\t  <span class="dot"></span>\n\t\t\t  <span class="dot"></span>\n\t\t\t</div>\n\t\t\t<div>\n\t\t\t    <div v-html="typingString"></div>\n\t\t\t</div>\n\t\t<div>\n\t',data:()=>({l10n:{stringIs:"",stringAnd:"",stringAre:"",stringTyping:""}}),created(){var t=this;window.addEventListener("localized",(n=>{n.detail.l10n.localize(t.l10n)}),{once:!0})},computed:{typingString(){const t=this.l10n;let n=this.usersTyping,s=Object.keys(n);if(s.length<=0)return"";if(1===s.length)return`<strong>${n[s[0]].name}</strong> ${t.stringIs} ${t.stringTyping}`;if(2===s.length)return`<strong>${n[s[0]].name}</strong> ${t.stringAnd} <strong>${n[s[1]].name}</strong> ${t.stringAre} ${t.stringTyping}`;{const i=s.pop();console.log(s,i);return`${s.map((t=>`<strong>${n[t].name}</strong>`)).join(", ")}, ${t.stringAnd} <strong>${n[i].name}</strong> ${t.stringAre} ${t.stringTyping}`}}},methods:{}};