riot.tag2("tool-bar",'<div id="main-toolbar" class="toolbar"> <button class="toolbutton" id="activity-button" title="Jappy Activity"></button> <hr> <button class="toolbutton" id="example-button" title="Load an example" ref="examplebutton"></button> <hr> <button class="toolbutton {colored: window.state!=\'run\'}" id="run-button" title="Execute" ref="runbutton"></button> <button class="toolbutton {colored: window.state==\'run\'}" id="break-button" title="Break execution" ref="breakbutton"></button> <button class="toolbutton {colored: window.state!=\'clean\'}" id="erase-button" title="Clear the canvas" ref="erasebutton"></button> <button class="toolbutton {hidden: window.state==\'run\'}" id="start-button" title="Start fullscreen" ref="startbutton"></button> <button class="toolbutton {hidden: window.state==\'stopped\'} {hidden: window.state==\'clean\'}" id="full-button" title="View fullscreen" ref="fullbutton"></button> <button class="toolbutton" id="export-button" title="Export or publish" ref="exportbutton"></button> <button class="toolbutton pull-right" id="stop-button" title="Stop" ref="stopbutton"></button> </div>','tool-bar #main-toolbar #run-button,[data-is="tool-bar"] #main-toolbar #run-button{ background-image: url(icons/run_bw.svg); } tool-bar #main-toolbar #run-button.colored,[data-is="tool-bar"] #main-toolbar #run-button.colored{ background-image: url(icons/run_color.svg); } tool-bar #main-toolbar #break-button,[data-is="tool-bar"] #main-toolbar #break-button{ background-image: url(icons/stopit_bw.svg); } tool-bar #main-toolbar #break-button.colored,[data-is="tool-bar"] #main-toolbar #break-button.colored{ background-image: url(icons/stopit_color.svg); } tool-bar #main-toolbar #erase-button,[data-is="tool-bar"] #main-toolbar #erase-button{ background-image: url(icons/eraser_bw.svg); } tool-bar #main-toolbar #erase-button.colored,[data-is="tool-bar"] #main-toolbar #erase-button.colored{ background-image: url(icons/eraser_color.svg); } tool-bar #main-toolbar #example-button,[data-is="tool-bar"] #main-toolbar #example-button{ background-image: url(icons/load-example.svg); } tool-bar #main-toolbar #start-button,[data-is="tool-bar"] #main-toolbar #start-button{ background-image: url(icons/activity-start.svg); } tool-bar #main-toolbar #full-button,[data-is="tool-bar"] #main-toolbar #full-button{ background-image: url(icons/view-fullscreen.svg); } tool-bar #main-toolbar #export-button,[data-is="tool-bar"] #main-toolbar #export-button{ background-image: url(icons/export-or-publish.svg); } tool-bar .hidden,[data-is="tool-bar"] .hidden{ display: none !important; }',"",(function(t){var e,o;e=this,o=ρσ_list_decorate(["welcome.pyj","memorize.pyj","mandala.pyj","input.pyj","repl.pyj","unicode.pyj"]),window.state="clean",this.on("mount",(function init(){function activity_ready(t){e.refs.stopbutton.onclick=function(){event_bus.trigger("activity-save",t)}}var t;this.refs.runbutton.onclick=function(){window.state="run",e.update(),event_bus.trigger("run-code")},this.refs.startbutton.onclick=function(){window.state="run",e.update(),event_bus.trigger("run-fullscreen")},this.refs.fullbutton.onclick=function(){window.state="run",e.update(),event_bus.trigger("run-fullscreen",!1)},this.refs.breakbutton.onclick=function(){window.state="stopped",e.update(),event_bus.trigger("break-code")},this.refs.erasebutton.onclick=function(){window.state="clean",event_bus.trigger("clear-output"),event_bus.trigger("traybutton-close",!1),e.update()},activity_ready.__argnames__||Object.defineProperties(activity_ready,{__argnames__:{value:["activity"]}}),event_bus.on("activity-ready",activity_ready),event_bus.on("enable-standalone",(function enable_standalone(){e.refs.stopbutton.onclick=function(){var t;event_bus.trigger("activity-save",activity),t=window.location.protocol+"//"+window.location.host+"/",window.location=t+"shutdown"}})),requirejs(ρσ_list_decorate(["sugar-web/graphics/palette"]),((t=function(t){var n,r,a,i,l,s;e.example_palette=new t.Palette(e.refs.examplebutton,"Load an example"),n=ρσ_list_decorate([]);for(var u=ρσ_Iterable(o),_=0;_<u.length;_++){function trigger_load(t){return function(){e.example_palette.popDown(),event_bus.trigger("example-load",t)}}s=u[_],(r=document.createElement("div")).classList.add("menu"),(a=document.createElement("button")).classList.add("icon"),(i=document.createElement("span")).classList.add("pyj"),l=document.createTextNode(s),a.appendChild(i),a.appendChild(l),trigger_load.__argnames__||Object.defineProperties(trigger_load,{__argnames__:{value:["el"]}}),a.onclick=trigger_load(s),r.appendChild(a),n.append(r)}function as_zip(){void 0===this.ρσ_object_id&&Object.defineProperty(this,"ρσ_object_id",{value:++ρσ_object_counter}),as_zip.prototype.__init__.apply(this,arguments)}function import_file(){void 0===this.ρσ_object_id&&Object.defineProperty(this,"ρσ_object_id",{value:++ρσ_object_counter}),import_file.prototype.__init__.apply(this,arguments)}e.example_palette.setContent(n),e.export_palette=new t.Palette(e.refs.exportbutton,"Export"),as_zip.prototype.__init__=function __init__(){},as_zip.prototype.__repr__=function __repr__(){return"<"+__name__+"."+this.constructor.name+" #"+this.ρσ_object_id+">"},as_zip.prototype.__str__=function __str__(){return this.__repr__()},Object.defineProperty(as_zip.prototype,"__bases__",{value:[]}),as_zip.prototype.label="Export as zipped HTML",as_zip.prototype.icon="html",as_zip.prototype.trigger="save-as-zip",import_file.prototype.__init__=function __init__(){},import_file.prototype.__repr__=function __repr__(){return"<"+__name__+"."+this.constructor.name+" #"+this.ρσ_object_id+">"},import_file.prototype.__str__=function __str__(){return this.__repr__()},Object.defineProperty(import_file.prototype,"__bases__",{value:[]}),import_file.prototype.label="Import",import_file.prototype.icon="zip",import_file.prototype.trigger="import-file",n=ρσ_list_decorate([]);for(var b=ρσ_Iterable(ρσ_list_decorate([new as_zip,new import_file])),c=0;c<b.length;c++){function trigger_export(t){return function(){e.export_palette.popDown(),event_bus.trigger(t)}}s=b[c],(r=document.createElement("div")).classList.add("menu"),(a=document.createElement("button")).classList.add("icon"),(i=document.createElement("span")).classList.add(s.icon),l=document.createTextNode(s.label),a.appendChild(i),a.appendChild(l),trigger_export.__argnames__||Object.defineProperties(trigger_export,{__argnames__:{value:["event"]}}),a.onclick=trigger_export(s.trigger),r.appendChild(a),n.append(r)}e.export_palette.setContent(n)}).__argnames__||Object.defineProperties(t,{__argnames__:{value:["palette"]}}),t))}))}));