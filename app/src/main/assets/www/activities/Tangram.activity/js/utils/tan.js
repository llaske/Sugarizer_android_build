var areaSum=new IntAdjoinSqrt2(576,0);function Tan(t,n,e){this.tanType=t,this.anchor=n,this.orientation=e,"undefined"!=typeof generating&&generating&&(this.points=this.getPoints(),this.segments=this.getSegments(),this.insidePoints=this.getInsidePoints())}Tan.prototype.dup=function(){return new Tan(this.tanType,this.anchor.dup(),this.orientation)},Tan.prototype.area=function(){return[96,48,24,48,48,48][this.tanType]},Tan.prototype.getPoints=function(){if(generating&&void 0!==this.points)return this.points;var t=[];t[0]=this.anchor.dup();for(var n=Directions[this.tanType][this.orientation],e=0;e<n.length;e++){var i=this.anchor.dup();i.add(n[e]),t[e+1]=i}return t},Tan.prototype.getSegments=function(){if(generating&&void 0!==this.segments)return this.segments;for(var t=[],n=this.getPoints(),e=0;e<n.length-1;e++)t[e]=new LineSegment(n[e],n[e+1]);return t[e]=new LineSegment(n[e],n[0]),t},Tan.prototype.center=function(){return this.anchor.dup().add(InsideDirections[this.tanType][this.orientation][0])},Tan.prototype.getInsidePoints=function(){if(generating&&void 0!==this.insidePoints)return this.insidePoints;for(var t=[],n=InsideDirections[this.tanType][this.orientation].length,e=0;e<n;e++)t.push(this.anchor.dup().add(InsideDirections[this.tanType][this.orientation][e]));return t},Tan.prototype.toSVG=function(){for(var t=this.getPoints(),n="",e=0;e<t.length;e++)n+=t[e].toFloatX()+", "+t[e].toFloatY()+" ";return n};var getAllPoints=function(t){for(var n=[],e=0;e<t.length;e++){var i=t[e].getPoints();n=n.concat(i)}return n=eliminateDuplicates(n,comparePoints,!0)},outlineArea=function(t){for(var n=new IntAdjoinSqrt2(0,0),e=0;e<t.length-1;e++)n.add(t[e].determinant(t[e+1]));return n.add(t[e].determinant(t[0])),n.abs(),n.scale(.5)},tanSumArea=function(t){for(var n=0,e=0;e<t.length;e++)n+=t[e].area();return n},outlineContainsAll=function(t,n){for(var e=0;e<n.length;e++){if(-1===containsPoint(t,n[e]))return!1}return!0},computeSegments=function(t,n){for(var e,i=[],o=0;o<n.length;o++){e=n[o].getSegments();for(var r=0;r<e.length;r++){for(var a=[],s=0;s<t.length;s++)e[r].onSegment(t[s])&&a.push(t[s]);i=i.concat(e[r].split(a))}}return i=eliminateDuplicates(i,compareLineSegments,!1)},findMinSegments=function(t,n){for(var e=360,i=-1,o=0;o<n.length;o++){var r=n[o].angleTo(t);r<e&&(i=o,e=r)}return[i,e]},findMaxSegments=function(t,n){for(var e=0,i=-1,o=0;o<n.length;o++){var r=n[o].angleTo(t);r>e&&(i=o,e=r)}return[i,e]},computeOutlinePart=function(t,n,e,i,o){if(0!==t.length&&0!==n.length){t.sort(comparePoints);var r=t[0],a=r.dup();a.subtract(new Point(new IntAdjoinSqrt2(0,0),new IntAdjoinSqrt2(1,0)));var s=[];s.push(r);var u=new LineSegment(a,r),p=!0;do{var h,g=n.filter((function(t){return!u.eq(t)&&(t.point1.eq(r)||t.point2.eq(r))})),l=(h=p?findMaxSegments(u,g):e(u,g))[0],c=h[1];if(-1===l)break;180===c&&!p&&o&&s.pop(),g[l].point1.eq(r)?(s.push(g[l].point2),r=g[l].point2):(s.push(g[l].point1),r=g[l].point1),u=g[l],n=n.filter((function(t){return!u.eq(t)})),p&&(p=!1)}while(!r.eq(t[0])||!outlineContainsAll(s,t)&&!i);return s.pop(),[s,n]}},computeHole=function(t,n,e){if(0!==t.length&&0!==n.length){for(var i=2*n.length,o=0;i!=o;){i=2*n.length;for(var r=[],a=0;a<n.length;a++)r.push(n[a].point1),r.push(n[a].point2);o=2*(n=n.filter((function(t){return bothPointsMultipleTimes(r,t.point1,t.point2)}))).length}return t=eliminateDuplicates(r,comparePoints,!0),computeOutlinePart(t,n,findMinSegments,!0,e)}},computeOutline=function(t,n){var e=[],i=0,o=getAllPoints(t),r=computeSegments(o,t),a=computeOutlinePart(o,r,findMaxSegments,!1,n);e[i]=a[0],r=a[1];for(var s=outlineArea(e[0]);!s.eq(areaSum)&&s.toFloat()>576||!outlineContainsAll(e[0],o);){if(i++,void 0===(a=computeHole(o,r,findMinSegments)))return;e[i]=a[0],r=a[1],s.subtract(outlineArea(e[i]))}return e},computeBoundingBox=function(t,n){n=void 0===n?getAllPoints(t):n[0];for(var e=new IntAdjoinSqrt2(100,0),i=new IntAdjoinSqrt2(100,0),o=new IntAdjoinSqrt2(-100,0),r=new IntAdjoinSqrt2(-100,0),a=0;a<n.length;a++){var s=n[a].x,u=n[a].y;s.compare(e)<0&&(e=s),u.compare(i)<0&&(i=u),s.compare(o)>0&&(o=s),u.compare(r)>0&&(r=u)}return[e,i,o,r]},containsPoint=function(t,n){for(var e=0,i=0;i<t.length;i++){var o=t[i],r=i===t.length-1?t[0]:t[i+1];if(n.eq(o)||n.eq(r)||new LineSegment(o,r).onSegment(n))return 0;t[i].y.compare(n.y)<=0?1===r.y.compare(n.y)&&relativeOrientation(r,n,o)>0&&e++:r.y.compare(n.y)<=0&&relativeOrientation(r,n,o)<0&&e--}return 0===e?-1:1};