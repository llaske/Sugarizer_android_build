var TangramCard={props:["strokeColor","fillColor","item","view","tangramSVGconfig","dataSetHandler"],template:'\n\t\t<div class="tangram-card" v-bind:style="{backgroundColor: \'#ffffff\'}"\n      v-on:click="view===\'play\'? onPlayPuzzleClicked() : \'null\'"\n    >\n      <div class="tangram-card-info-bar">\n        <div class="info-content name-info">\n          <div>{{tangramName}}</div>\n        </div>\n        <button v-if="view===\'setting\'" class="info-content edit-btn" v-on:click="onEditPuzzleClicked"></button>\n        <button v-if="view===\'setting\'" v-bind:disabled="dataSetHandler.tangramSet.length==1" class="info-content delete-btn" v-on:click="onDeletePuzzleClicked"></button>\n      </div>\n\t\t\t<div class="tangram-card-main"\n        v-bind:style="{\n          cursor: view===\'play\' ? \'pointer\' : \'auto\'\n        }"\n      >\n        <div\n          v-bind:style="{\n            width: tangramSVGconfig.width+\'px\',\n            height: tangramSVGconfig.height+\'px\',\n          }"\n        >\n          <svg>\n            <path\n              v-bind:fill="fillColor"\n              v-bind:transform="pathScale"\n              fill-rule=\'evenodd\'\n              v-bind:d="item.tangramSVG"\n            >\n            </path>\n          </svg>\n        </div>\n      </div>\n\t\t</div>\n\t',computed:{pathScale:function(){return"scale("+this.tangramSVGconfig.scale+")"},tangramName:function(){return this.$root.SugarL10n.dictionary&&this.$root.SugarL10n.dictionary["Data"+this.item.name.replace(/ /g,"")]?this.$root.SugarL10n.get("Data"+this.item.name.replace(/ /g,"")):this.item.name}},methods:{onDeletePuzzleClicked:function(){this.$emit("delete-puzzle-clicked",this.item.id)},onEditPuzzleClicked:function(){this.$emit("edit-puzzle-clicked",this.item.id)},onPlayPuzzleClicked:function(){this.$emit("play-puzzle-clicked",this.item.id)}}},DatasetList={components:{"tangram-card":TangramCard},props:["strokeColor","fillColor","dataSetHandler","puzzles","view"],template:'\n    <div id="dataset-list-screen" class="pulse-main"\n      v-bind:style="{backgroundColor: strokeColor}"\n    >\n      <div class="dataset-list-header">\n        <div class="dataset-list-bar"\n        >\n          <div class="dataset-list-bar-block"\n            v-bind:style="{backgroundColor: fillColor}"\n          >\n            <div class="dataset-list-bar-block-title">{{currentCategoryTitle}}</div>\n            <div class="buttons-grp">\n              <button v-if="view===\'setting\'" class="info-content edit-btn" v-on:click="onEditCategory"></button>\n              <button v-if="view===\'setting\'" v-bind:disabled="dataSetHandler.AllCategories.length==1" class="info-content delete-btn" v-on:click="onDeleteCategory"></button>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <div class="dataset-list-main"\n        v-bind:style="{\n          height: view === \'setting\' ? \'74%\' : \'82%\',\n        }"\n      >\n        <div class="dataset-list-panel-primary"\n        >\n          <tangram-card\n            v-bind:ref="index"\n            v-for="(puzzle,index) in puzzlesSet"\n            v-bind:key="index"\n            v-bind:item="puzzle"\n            v-bind:stroke-color="strokeColor"\n            v-bind:fill-color="fillColor"\n            v-bind:tangramSVGconfig="tangramSVGconfig"\n            v-bind:view="view"\n            v-bind:dataSetHandler="dataSetHandler"\n            v-on:delete-puzzle-clicked="onDeletePuzzle"\n            v-on:edit-puzzle-clicked="onEditPuzzle"\n            v-on:play-puzzle-clicked="onPlayPuzzle"\n            v-on:play-puzzle-clicked="onPlayPuzzle"\n          ></tangram-card>\n        </div>\n\n      </div>\n      <div class="dataset-list-footer"\n        v-bind:style="{\n          height: view === \'setting\' ? \'12%\' : \'3%\',\n        }"\n      >\n          <div class="pagination">\n          </div>\n          <div class="footer-actions">\n            <button\n              class="btn-in-footer btn-add-puzzle"\n              v-if="view===\'setting\'"\n              v-bind:style="{\n                backgroundColor: fillColor,\n                width: actionButtons.width + \'px\',\n                height: actionButtons.height + \'px\',\n              }"\n              v-on:click="$emit(\'go-to-setting-editor\')"\n            ></button>\n          </div>\n      </div>\n    </div>\n  ',data:function(){return{configKonva:{width:300,height:300},configLayer:{scaleX:5,scaleY:5},actionButtons:{width:30,width:30},totalScore:0,puzzlesSet:[],tangramSVGconfig:{width:60,height:60,scale:1}}},created:function(){window.addEventListener("resize",this.resize),this.initializePuzzleShape()},destroyed:function(){window.removeEventListener("resize",this.resize)},mounted:function(){this.resize(),document.getElementById("spinner").style.visibility="hidden"},computed:{currentCategoryTitle:function(){let t=this.$root.SugarL10n.dictionary?this.$root.SugarL10n.dictionary["Data"+this.dataSetHandler.currentCategories[0].replace(/ /g,"")]:null;return t||this.dataSetHandler.currentCategories[0]}},watch:{"dataSetHandler.tangramSet":function(){let t=this;t.initializePuzzleShape(),setTimeout((()=>{let e=document.querySelector(".tangram-card-main");if(e){let n=.9*Math.min(e.offsetHeight,e.offsetWidth);t.$set(t.tangramSVGconfig,"width",n),t.$set(t.tangramSVGconfig,"height",n),t.$set(t.tangramSVGconfig,"scale",n/60)}}),10)},view:function(){let t=this;setTimeout((()=>{t.resize()}),0)}},methods:{resize:function(){let t=this,e=document.getElementById("main-toolbar"),n=0!=e.offsetHeight?e.offsetHeight+3:3,i=window.innerHeight-n;window.innerWidth;document.querySelector("#dataset-list-screen").style.height=i+"px";let a=document.querySelector(".dataset-list-footer");t.$set(t.actionButtons,"width",.95*a.offsetHeight),t.$set(t.actionButtons,"height",.95*a.offsetHeight);let l=document.querySelector(".tangram-card-main");if(l){let e=.9*Math.min(l.offsetHeight,l.offsetWidth);t.$set(t.tangramSVGconfig,"width",e),t.$set(t.tangramSVGconfig,"height",e),t.$set(t.tangramSVGconfig,"scale",e/60)}},initializePuzzleShape:function(){let t=this;t.puzzlesSet=[];let e=t.dataSetHandler.tangramSet;for(var n=0;n<e.length;n++){let e=t.dataSetHandler.buildTangramPuzzle(n),i={name:e.name,id:e.id,difficulty:checkDifficultyOfTangram(e.tangram),tangram:e.tangram.dup(),tangramSVG:""};i.tangram.positionCentered(),i.tangramSVG=i.tangram.toSVGOutline().children[0].getAttribute("d"),t.puzzlesSet.push(i)}},onEditCategory:function(){this.$emit("edit-category")},onDeleteCategory:function(){this.dataSetHandler.deleteCategory(this.dataSetHandler.currentCategories[0])},onDeletePuzzle:function(t){this.dataSetHandler.deleteTangramPuzzle(t)},onEditPuzzle:function(t){this.$emit("edit-puzzle",t)},onPlayPuzzle:function(t){this.$emit("play-puzzle",t)}}};