define((function(e){var t=[];function SugarPresence(){var emptyCallback=function(){};t=[emptyCallback,emptyCallback,emptyCallback,emptyCallback,emptyCallback,emptyCallback,emptyCallback,emptyCallback,emptyCallback,emptyCallback],this.socket=null,this.registerMessageHandler=function(){this.socket.onmessage=function(e){var n=e.data;try{var r=JSON.parse(n)}catch(e){return void console.log("Presence API error, this doesn't look like a valid JSON: ",n)}r.type<t.length?t[r.type](r.data):console.log("Presence API error, unknown callback type:"+r.type)}},this.registerUser=function(){this.socket.send(JSON.stringify(this.userInfo))}}var n=new SugarPresence;return SugarPresence.prototype.isConnected=function(){return null!=this.socket&&1==this.socket.readyState},SugarPresence.prototype.getUserInfo=function(){return this.userInfo},SugarPresence.prototype.getSharedInfo=function(){return this.sharedInfo},SugarPresence.prototype.joinNetwork=function(e){window.WebSocket||(r.socket=null,console.log("WebSocket not supported"),e({code:-1},n));var r=this;!function getSugarSettings(e){"undefined"!=typeof chrome&&chrome.app&&chrome.app.runtime?chrome.storage.local.get("sugar_settings",(function(t){e(t.sugar_settings)})):e(localStorage.sugar_settings)}((function(o){var s=location.hostname,i=8039,c=!1;if(o){var a=JSON.parse(o);if(a.server){s=a.server.url.substring(a.server.url.indexOf("://")+3),c=0==a.server.url.indexOf("https://");var u=s.indexOf(":");-1==u&&(u=s.indexOf("/")),-1==u&&(u=s.length),s=s.substring(0,u),i=a.server.presence}}if(!s)return r.socket=null,console.log("No server available"),void e({code:-2},n);r.socket=new WebSocket((c?"wss://":"ws://")+s+":"+i),r.socket.onerror=function(t){console.log("WebSocket Error: "+t),e(t,n),r.socket=null},r.socket.onopen=function(t){var s=JSON.parse(o);r.userInfo={name:s.name,networkId:s.networkId,colorvalue:s.colorvalue},r.registerMessageHandler(),r.registerUser(),e(null,n)},r.socket.onclose=function(e){t[6](e)}}))},SugarPresence.prototype.leaveNetwork=function(){this.isConnected()&&(this.socket.close(),this.socket=null)},SugarPresence.prototype.listUsers=function(e){if(this.isConnected()){t[1]=e;var n=JSON.stringify({type:1});this.socket.send(n)}},SugarPresence.prototype.listSharedActivityUsers=function(e,n){if(this.isConnected()){t[9]=function(e){n(e)};var r=JSON.stringify({type:9,group:e});this.socket.send(r)}},SugarPresence.prototype.createSharedActivity=function(e,n){if(this.isConnected()){var r=this;t[2]=function(e){r.sharedInfo={id:e},n(e)};var o=JSON.stringify({type:2,activityId:e});this.socket.send(o)}},SugarPresence.prototype.listSharedActivities=function(e){if(this.isConnected()){t[3]=e;var n=JSON.stringify({type:3});this.socket.send(n)}},SugarPresence.prototype.joinSharedActivity=function(e,n){if(this.isConnected()){var r=this;t[4]=function(e){r.sharedInfo=e,n(e)};var o=JSON.stringify({type:4,group:e});this.socket.send(o)}},SugarPresence.prototype.leaveSharedActivity=function(e,n){if(this.isConnected()){t[5]=n;var r=JSON.stringify({type:5,group:e});this.socket.send(r)}},SugarPresence.prototype.onConnectionClosed=function(e){t[6]=e},SugarPresence.prototype.onSharedActivityUserChanged=function(e){t[7]=e},SugarPresence.prototype.sendMessage=function(e,t){if(this.isConnected()){var n=JSON.stringify({type:8,group:e,data:t});this.socket.send(n)}},SugarPresence.prototype.onDataReceived=function(e){t[8]=e},n}));