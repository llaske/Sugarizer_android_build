var SkillCard={template:'\n\t\t<div\n\t\t\tclass="skill-card"\n\t\t\t:class="{ \'settings-active\': settings }"\n\t\t\t:style="{ border: \'solid 2px \' + category.color }"\n\t\t\t@click="onSkillClick"\n\t\t>\n\t\t\t\t<div class="settings-row">\n\t\t\t\t\t<transition name="settings-zoom">\n\t\t\t\t\t\t<button id="edit-button" @click="onEditClick" v-if="settings"></button>\n\t\t\t\t\t</transition>\n\t\t\t\t\t<transition name="settings-zoom">\n\t\t\t\t\t\t<button id="delete-button" @click.stop="onDeleteClick" v-if="settings"></button>\n\t\t\t\t\t\t<medal v-else small :acquired="acquired" :levels="levels" :notation-level="notationLevel" :userColors="userColors"></medal>\n\t\t\t\t\t</transition>\n\t\t\t\t</div>\n\t\t\t<img :src="skill.image" alt="Skill image" class="skill-image" loading="lazy">\n\t\t\t<div ref="footer" class="skill-footer">\n\t\t\t\t<h2 class="skill-title">{{ skill.title }}</h2>\n\t\t\t</div>\n\t\t</img>\n\t',components:{medal:Medal},props:["skill","category","user","settings","levels","notationLevel","userColors"],computed:{acquired:function(){return this.user&&this.user.skills[this.category.id][this.skill.id]?this.user.skills[this.category.id][this.skill.id].acquired:0}},mounted:function(){this.$refs.footer.style.background=this.category.color,this.$refs.footer.style.boxShadow="0 3px 15px "+this.category.color},methods:{onSkillClick:function(){this.settings||this.$emit("skill-clicked",this.skill.id)},onEditClick:function(){this.$emit("edit-skill-clicked",this.skill.id)},onDeleteClick:function(){this.$emit("delete-clicked",this.skill.id)}}},SkillsGrid={template:'\n\t\t<div class="skills">\n\t\t\t<button id="back-button" @click="goBackTo"></button>\n\t\t\t<h1 class="category-title">\n\t\t\t\t{{ category.title }}\n\t\t\t\t<span ref="underline1" class="underline" :style="{ backgroundColor: category.color }"></span>\n\t\t\t\t<span ref="underline2" class="underline" :style="{ backgroundColor: category.color }"></span>\n\t\t\t</h1>\n\n\t\t\t<div>\n\t\t\t\t<draggable class="skills-container" v-model="category.skills" :disabled="!settings" :animation="300">\n\t\t\t\t\t<skill-card\n\t\t\t\t\t\tv-for="(skill, i) in category.skills"\n\t\t\t\t\t\t:key="skill.id"\n\t\t\t\t\t\t:id="i"\n\t\t\t\t\t\tv-show="matchesSearch(skill.title)"\n\t\t\t\t\t\t:skill="skill"\n\t\t\t\t\t\t:category="category"\n\t\t\t\t\t\t:user="user"\n\t\t\t\t\t\t:settings="settings"\n\t\t\t\t\t\t:levels="levels"\n\t\t\t\t\t\t:notationLevel="notationLevel"\n\t\t\t\t\t\t:userColors="userColors"\n\t\t\t\t\t\t@skill-clicked="onSkillClick"\n\t\t\t\t\t\t@edit-skill-clicked="onEditSkillClick"\n\t\t\t\t\t\t@delete-clicked="deleteSkill"\n\t\t\t\t\t></skill-card>\n\t\t\t\t</draggable>\n\t\t\t</div>\n\n\t\t</div>\n\t',components:{"skill-card":SkillCard},props:["categories","categoryId","user","settings","levels","notationLevel","searchQuery","userColors"],computed:{category:function(){var t=this;return this.categories.find((function(i){return i.id==t.categoryId}))}},methods:{matchesSearch(t){var i=new RegExp(this.searchQuery,"i");return-1!=t.search(i)},onSkillClick:function(t){this.$emit("open-skill",this.category.id,t)},goBackTo:function(){this.$emit("go-back-to","categories-grid")},onEditSkillClick:function(t){this.$emit("edit-skill",this.category.id,t)},deleteSkill:function(t){var i=this,e=this.categories.findIndex((function(t){return t.id==i.categoryId})),l=this.categories[e].skills.findIndex((function(i){return i.id==t}));this.categories[e].skills.splice(l,1),Vue.delete(this.user.skills[this.categoryId],t)}}},SkillDetails={template:'\n\t\t<div class="skill-details">\n\t\t\t<button id="back-button" @click="goBackTo"></button>\n\t\t\t<div class="skill-title">\n\t\t\t\t<h1>{{ skill.title }}</h1>\n\t\t\t\t<span ref="underline3" class="underline"></span>\n\t\t\t\t<medal\n\t\t\t\t\t:acquired="currentAcquired"\n\t\t\t\t\t:levels="levels"\n\t\t\t\t\t:notation-level="notationLevel"\n\t\t\t\t\t:userColors="userColors"\n\t\t\t\t\t@click="$root.switchSkillLevel"\n\t\t\t\t/>\n\t\t\t</div>\n\t\t\t<div class="skill-contents">\n\t\t\t\t<div class="skill-image">\n\t\t\t\t\t<img :src="skill.image">\n\t\t\t\t</div>\n\t\t\t\t\x3c!-- <flag :raised="currentAcquired"></flag> --\x3e\n\t\t\t\t<div class="skill-uploads">\n\t\t\t\t\t<div class="upload-preview" :class="{ \'uploaded\': uploads.length != 0 }">\n\t\t\t\t\t\t<div v-show="uploads.length == 0">\n\t\t\t\t\t\t\t<div ref="uploadPreview" class="preview-icon"></div>\n\t\t\t\t\t\t\t<p>{{l10n.stringUploadSkill}}</p>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<p v-show="uploads.length > 0">{{ uploads.length }}</p>\n\t\t\t\t\t</div>\n\t\t\t\t\t<upload-item\n\t\t\t\t\t\tv-for="(item, i) in uploads"\n\t\t\t\t\t\t:key="item.timestamp"\n\t\t\t\t\t\t:id="i"\n\t\t\t\t\t\t:item="item"\n\t\t\t\t\t\t@delete-item="$emit(\'delete-item\', item)"\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t',components:{"upload-item":UploadItem,medal:Medal},props:["categories","categoryId","skillId","user","currentAcquired","levels","notationLevel","userColors"],data:()=>({l10n:{stringUploadSkill:""}}),computed:{category:function(){var t=this;return this.categories.find((function(i){return i.id==t.categoryId}))},skill:function(){var t=this;return this.category.skills.find((function(i){return i.id==t.skillId}))},uploads:function(){var t=[],i=this.user.skills[this.categoryId][this.skillId].media;for(var e in i)i[e].forEach((function(i){i.type=e,t.push(i)}));return this.sortUploads(t)}},mounted:function(){this.$root.$refs.SugarL10n.localize(this.l10n),this.$refs.underline3.style.background=this.category.color},methods:{sortUploads:function(t){return t.sort((function(t,i){return i.timestamp-t.timestamp})),t},goBackTo:function(){this.$emit("go-back-to","skills-grid")}}};