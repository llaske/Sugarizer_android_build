import Delta from"quill-delta";import{ClassAttributor,Scope}from"parchment";import Inline from"../blots/inline";import Quill from"../core/quill";import Module from"../core/module";import{blockDelta}from"../blots/block";import BreakBlot from"../blots/break";import CursorBlot from"../blots/cursor";import TextBlot,{escapeText}from"../blots/text";import CodeBlock,{CodeBlockContainer}from"../formats/code";import{traverse}from"./clipboard";const TokenAttributor=new ClassAttributor("code-token","hljs",{scope:Scope.INLINE});class CodeToken extends Inline{static formats(e,t){for(;null!=e&&e!==t.domNode;){if(e.classList.contains(CodeBlock.className))return super.formats(e,t);e=e.parentNode}}constructor(e,t,o){super(e,t,o),TokenAttributor.add(this.domNode,o)}format(e,t){e!==CodeToken.blotName?super.format(e,t):t?TokenAttributor.add(this.domNode,t):(TokenAttributor.remove(this.domNode),this.domNode.classList.remove(this.statics.className))}optimize(...e){super.optimize(...e),TokenAttributor.value(this.domNode)||this.unwrap()}}CodeToken.blotName="code-token",CodeToken.className="ql-token";class SyntaxCodeBlock extends CodeBlock{static create(e){const t=super.create(e);return"string"==typeof e&&t.setAttribute("data-language",e),t}static formats(e){return e.getAttribute("data-language")||"plain"}static register(){}format(e,t){e===this.statics.blotName&&t?this.domNode.setAttribute("data-language",t):super.format(e,t)}replaceWith(e,t){return this.formatAt(0,this.length(),CodeToken.blotName,!1),super.replaceWith(e,t)}}class SyntaxCodeBlockContainer extends CodeBlockContainer{attach(){super.attach(),this.forceNext=!1,this.scroll.emitMount(this)}format(e,t){e===SyntaxCodeBlock.blotName&&(this.forceNext=!0,this.children.forEach(o=>{o.format(e,t)}))}formatAt(e,t,o,l){o===SyntaxCodeBlock.blotName&&(this.forceNext=!0),super.formatAt(e,t,o,l)}highlight(e,t=!1){if(null==this.children.head)return;const o=Array.from(this.domNode.childNodes).filter(e=>e!==this.uiNode).map(e=>e.textContent).join("\n")+"\n",l=SyntaxCodeBlock.formats(this.children.head.domNode);if(t||this.forceNext||this.cachedText!==o){if(o.trim().length>0||null==this.cachedText){const t=this.children.reduce((e,t)=>e.concat(blockDelta(t,!1)),new Delta),i=e(o,l);t.diff(i).reduce((e,{retain:t,attributes:o})=>t?(o&&Object.keys(o).forEach(l=>{[SyntaxCodeBlock.blotName,CodeToken.blotName].includes(l)&&this.formatAt(e,t,l,o[l])}),e+t):e,0)}this.cachedText=o,this.forceNext=!1}}optimize(e){if(super.optimize(e),null!=this.parent&&null!=this.children.head&&null!=this.uiNode){const e=SyntaxCodeBlock.formats(this.children.head.domNode);e!==this.uiNode.value&&(this.uiNode.value=e)}}}SyntaxCodeBlockContainer.allowedChildren=[SyntaxCodeBlock],SyntaxCodeBlock.requiredContainer=SyntaxCodeBlockContainer,SyntaxCodeBlock.allowedChildren=[CodeToken,CursorBlot,TextBlot,BreakBlot];class Syntax extends Module{static register(){Quill.register(CodeToken,!0),Quill.register(SyntaxCodeBlock,!0),Quill.register(SyntaxCodeBlockContainer,!0)}constructor(e,t){if(super(e,t),null==this.options.hljs)throw new Error("Syntax module requires highlight.js. Please include the library on the page before Quill.");this.highlightBlot=this.highlightBlot.bind(this),this.initListener(),this.initTimer()}initListener(){this.quill.on(Quill.events.SCROLL_BLOT_MOUNT,e=>{if(!(e instanceof SyntaxCodeBlockContainer))return;const t=this.quill.root.ownerDocument.createElement("select");this.options.languages.forEach(({key:e,label:o})=>{const l=t.ownerDocument.createElement("option");l.textContent=o,l.setAttribute("value",e),t.appendChild(l)}),t.addEventListener("change",()=>{e.format(SyntaxCodeBlock.blotName,t.value),this.quill.root.focus(),this.highlight(e,!0)}),null==e.uiNode&&(e.attachUI(t),e.children.head&&(t.value=SyntaxCodeBlock.formats(e.children.head.domNode)))})}initTimer(){let e=null;this.quill.on(Quill.events.SCROLL_OPTIMIZE,()=>{clearTimeout(e),e=setTimeout(()=>{this.highlight(),e=null},this.options.interval)})}highlight(e=null,t=!1){if(this.quill.selection.composing)return;this.quill.update(Quill.sources.USER);const o=this.quill.getSelection();(null==e?this.quill.scroll.descendants(SyntaxCodeBlockContainer):[e]).forEach(e=>{e.highlight(this.highlightBlot,t)}),this.quill.update(Quill.sources.SILENT),null!=o&&this.quill.setSelection(o,Quill.sources.SILENT)}highlightBlot(e,t="plain"){if("plain"===t)return escapeText(e).split("\n").reduce((e,o,l)=>(0!==l&&e.insert("\n",{[CodeBlock.blotName]:t}),e.insert(o)),new Delta);const o=this.quill.root.ownerDocument.createElement("div");return o.classList.add(CodeBlock.className),o.innerHTML=this.options.hljs.highlight(t,e).value,traverse(this.quill.scroll,o,[(e,t)=>{const o=TokenAttributor.value(e);return o?t.compose((new Delta).retain(t.length(),{[CodeToken.blotName]:o})):t}],[(e,o)=>e.data.split("\n").reduce((e,o,l)=>(0!==l&&e.insert("\n",{[CodeBlock.blotName]:t}),e.insert(o)),o)],new WeakMap)}}Syntax.DEFAULTS={hljs:window.hljs,interval:1e3,languages:[{key:"plain",label:"Plain"},{key:"bash",label:"Bash"},{key:"cpp",label:"C++"},{key:"cs",label:"C#"},{key:"css",label:"CSS"},{key:"diff",label:"Diff"},{key:"xml",label:"HTML/XML"},{key:"java",label:"Java"},{key:"javascript",label:"Javascript"},{key:"markdown",label:"Markdown"},{key:"php",label:"PHP"},{key:"python",label:"Python"},{key:"ruby",label:"Ruby"},{key:"sql",label:"SQL"}]};export{SyntaxCodeBlock as CodeBlock,CodeToken,Syntax as default};