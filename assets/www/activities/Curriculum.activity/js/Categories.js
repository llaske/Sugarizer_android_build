var CategoryCard={template:'\n\t\t<div \n\t\t\tclass="category-card" \n\t\t\t:class="{ \'settings-active\': settings }"\n\t\t\t:style="{ backgroundColor: category.color, boxShadow: \'0 0 5px \' + category.color }"\n\t\t\t@click="onCategoryClick"\n\t\t>\n\t\t\t<div class="settings-row">\n\t\t\t\t<transition name="settings-zoom">\n\t\t\t\t\t<button id="edit-button" @click="onEditClick" v-if="settings"></button>\n\t\t\t\t</transition>\n\t\t\t\t<transition name="settings-zoom">\n\t\t\t\t\t<button id="delete-button" @click.stop="onDeleteClick" v-if="settings"></button>\n\t\t\t\t</transition>\n\t\t\t</div>\n\t\t\t<h1 class="category-title">{{ category.title }}</h1>\n\t\t\t<div class="category-skills">\n\t\t\t\t<div \n\t\t\t\t\tclass="skill" \n\t\t\t\t\tv-for="(skill, i) in skillsToShow" \n\t\t\t\t\t:key="i"\n\t\t\t\t\t:id="i"\n\t\t\t\t\t@click.stop="onSkillClick(skill.id)"\n\t\t\t\t>\n\t\t\t\t\t<img :src="skill.image" :alt="skill.title" loading="lazy">\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div class="progress">\n\t\t\t\t<medal \n\t\t\t\t\tsmall \n\t\t\t\t\tv-for="(n, i) in category.skills.length" \n\t\t\t\t\t:key="n" \n\t\t\t\t\t:acquired="i < acquiredSkills.length ? acquiredSkills[i] : 0" \n\t\t\t\t\t:levels="levels" \n\t\t\t\t\t:notation-level="notationLevel" \n\t\t\t\t\t:userColors="userColors"\n\t\t\t\t/>\n\t\t\t</div>\n\t\t</div>\n\t',components:{medal:Medal},props:["category","user","settings","levels","notationLevel","userColors"],computed:{skillsToShow:function(){for(var t=[],e=0;e<Math.min(3,this.category.skills.length);e++)t.push(this.category.skills[e]);return t},acquiredSkills:function(){var t=[];if(this.user)for(var e in this.user.skills[this.category.id])this.user.skills[this.category.id][e].acquired&&t.push(this.user.skills[this.category.id][e].acquired);return t}},methods:{onCategoryClick:function(){this.$emit("category-clicked",this.category.id)},onSkillClick:function(t){this.settings||this.$emit("skill-clicked",this.category.id,t)},onEditClick:function(){this.$emit("edit-category-clicked",this.category.id)},onDeleteClick:function(){this.$emit("delete-clicked",this.category.id)}}},CategoriesGrid={template:'\n\t\t<div >\n\t\t\t<draggable class="categories" v-model="categories" @update="onUpdate" :disabled="!settings" :animation="300">\n\t\t\t\t<category-card \n\t\t\t\t\tv-for="(category, i) in categories" \n\t\t\t\t\t:key="category.id"\n\t\t\t\t\t:id="i"\n\t\t\t\t\tv-show="matchesSearch(category.title)"\n\t\t\t\t\t:category="category"\n\t\t\t\t\t:user="user"\n\t\t\t\t\t:settings="settings"\n\t\t\t\t\t:levels="levels"\n\t\t\t\t\t:notationLevel="notationLevel"\n\t\t\t\t\t:userColors="userColors"\n\t\t\t\t\t@skill-clicked="onSkillClick"\n\t\t\t\t\t@category-clicked="onCategoryClick"\n\t\t\t\t\t@edit-category-clicked="onEditCategoryClick"\n\t\t\t\t\t@delete-clicked="deleteCategory"\n\t\t\t\t></category-card>\n\t\t\t</draggable>\n\t\t</div>\n\t',components:{"category-card":CategoryCard},props:["categories","user","settings","levels","notationLevel","searchQuery","userColors"],methods:{matchesSearch(t){var e=new RegExp(this.searchQuery,"i");return-1!=t.search(e)},onCategoryClick:function(t){this.$emit("open-category",t)},onSkillClick:function(t,e){this.$emit("open-skill",t,e)},onUpdate:function(t){this.$emit("update-categories",this.categories)},onEditCategoryClick:function(t){this.$emit("edit-category",t)},deleteCategory:function(t){var e=this.categories.findIndex((function(e){return e.id==t}));this.categories.splice(e,1),Vue.delete(this.user.skills,t)}}};