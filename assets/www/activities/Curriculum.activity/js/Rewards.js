var Trophy={template:'\n\t\t<div class="trophy-container">\n\t\t\t<div ref="trophyAcquired" class="trophy" :class="{ acquired: acquired }">\n\t\t\t\t<div class="trophy-info">\n\t\t\t\t\t<span ref="trophyText">{{ info.text }}</span>\n\t\t\t\t\t<img :src="\'./icons/\' + info.icon" class="trophy-icon" />\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t',props:{acquired:Boolean,userColors:Object,info:Object},data:{icon:null},computed:{colors:function(){return this.acquired&&this.userColors?this.userColors:{fill:"#aaa",stroke:"#333"}}},watch:{colors:function(t,e){this.colorizeElements(t)}},mounted:function(){var t=this;requirejs(["sugar-web/graphics/icon"],(function(e){t.icon=e,t.colorizeElements(t.colors)}))},methods:{colorizeElements(t){var e=this;this.$root.$refs.SugarIcon.generateIconWithColors("../icons/trophy-large.svg",t).then(t=>{e.$refs.trophyAcquired.style.backgroundImage=`url(${t})`})}}},Rewards={template:'\n\t\t<div class="rewards-container">\n\t\t\t<div class="trophies-container">\n\t\t\t\t<div class="trophy-card" v-for="(item, i) in achievements" :key="item.title" :id="i" v-if="evalCondition(item.availability)">\n\t\t\t\t\t<trophy :userColors="userColors" :acquired="evalAndUpdate(item)" :info="item.info" />\n\t\t\t\t\t<h4>{{ item.title }}</h4>\n\t\t\t\t\t<p\n\t\t\t\t\t\tv-if="user.achievements[item.id].timestamp"\n\t\t\t\t\t>{{ $root.$refs.SugarL10n.localizeTimestamp(user.achievements[item.id].timestamp) }}</p>\n\t\t\t\t\t<p v-else>{{ getProperty(item.condition.property) }}/{{ computeValue(item.condition) }}</p>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t',components:{trophy:Trophy},props:["achievements","categories","user","levels","notationLevel","userColors"],computed:{totalSkills:function(){var t=0;return this.categories.forEach((function(e){t+=e.skills.length})),t},totalCategories:function(){return this.categories.length},totalSkillsAcquired:function(){var t=0;for(var e in this.user.skills)for(var i in this.user.skills[e]){let r=this.levels[this.notationLevel][this.user.skills[e][i].acquired].textVariable;"LevelAcquired"!=r&&"LevelExceeded"!=r||t++}return t},totalCategoriesAcquired:function(){var t=0;for(var e in this.user.skills){var i=Object.keys(this.user.skills[e]).length>0;for(var r in this.user.skills[e]){let t=this.levels[this.notationLevel][this.user.skills[e][r].acquired].textVariable;if("LevelAcquired"!=t&&"LevelExceeded"!=t){i=!1;break}}i&&t++}return t},totalMediaUploaded:function(){var t=0;for(var e in this.user.skills)for(var i in this.user.skills[e])for(var r in this.user.skills[e][i].media)t+=this.user.skills[e][i].media[r].length;return t},levelWiseAcquired:function(){var t={};for(var e in this.levels[this.notationLevel])t[e]=0;for(var i in this.user.skills)for(var r in this.user.skills[i])t[this.user.skills[i][r].acquired]++;return t}},data:function(){return{l10n:{stringAchievementAcquired:""}}},mounted:function(){this.$root.$refs.SugarL10n.localize(this.l10n)},methods:{evalAndUpdate:function(t){var e=this.evalCondition(t.condition);return this.updateAchievement(t,e),e},evalCondition:function(t){if("boolean"==typeof t)return t;var e,i=this.computeValue(t),r=this.getProperty(t.property);if(0==r)return!1;switch(t.op){case"==":e=r==i;break;case"!=":e=r!=i;break;case">=":e=r>=i;break;case">":e=r>i;break;case"<=":e=r<=i;break;case"<":e=r<i}return e},computeValue:function(t){var e=t.value;if("object"==typeof t.value)switch(e=this.getProperty(t.value.property),t.value.op){case"+":e+=t.value.value;break;case"-":e-=t.value.value;break;case"*":e*=t.value.value;break;case"/":e/=t.value.value}return Math.floor(e)},getProperty:function(t){var e=t.match(/\[\w+((this)?\[?\w+\]?)?\w*\]/g),i=this,r=this;return e.forEach((function(t){var e=t.match(/\w+((this)?\[?\w+\]?)?\w*/g);e[0].match(/(this\[)/)&&(e=r.getProperty(e[0])),i=i[e]})),i},updateAchievement:function(t,e){if(e){if(null==this.user.achievements[t.id].timestamp){this.user.achievements[t.id].timestamp=Date.now();var i=this;this.$root.$refs.SugarIcon.generateIconWithColors("../icons/trophy-large.svg",this.userColors).then(e=>{var r=`<div style="display: flex; align-items:center;">${"<img style='height:40px; margin:10px; vertical-align:middle;' src='"+e+"'>"} <span><small style="color:#d3d3d3">${i.l10n.stringAchievementAcquired}</small><br>${t.title}</span></div>`;i.$root.$refs.SugarPopup.log(r)})}}else null!=this.user.achievements[t.id].timestamp&&(this.user.achievements[t.id].timestamp=null)}}};