var CategorySettings={template:'\n\t\t<div class="settings category-settings">\n\t\t\t<category-card \n\t\t\t\t:category="category"\n\t\t\t\t:levels="levels"\n\t\t\t></category-card>\n\t\t\t<form @submit.prevent="onConfirm">\n\t\t\t\t<div>\n\t\t\t\t\t<label for="title">{{ l10n.stringTitle }}</label>\n\t\t\t\t\t<input type="text" name="title" v-model="category.title" required>\n\t\t\t\t</div>\n\t\t\t\t<div>\n\t\t\t\t\t<label for="color">{{ l10n.stringColor }}</label>\n\t\t\t\t\t<div class="colors">\n\t\t\t\t\t\t<div \n\t\t\t\t\t\t\tclass="color"\n\t\t\t\t\t\t\tv-for="color in colors"\n\t\t\t\t\t\t\t:key="color"\n\t\t\t\t\t\t\t:style="{ backgroundColor: color }"\n\t\t\t\t\t\t\t:class="{ selected: category.color == color }"\n\t\t\t\t\t\t\t@click="category.color = color"\n\t\t\t\t\t\t></div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div class="buttons-row">\n\t\t\t\t\t<button type="submit" :disabled="category.title == \'\'">\n\t\t\t\t\t\t<img src="icons/dialog-ok.svg">\n\t\t\t\t\t\t<span>{{ l10n.stringConfirm }}</span>\n\t\t\t\t\t</button>\n\t\t\t\t\t<button type="button" @click="$emit(\'go-back-to\', \'categories-grid\')">\n\t\t\t\t\t\t<img src="icons/dialog-cancel.svg">\n\t\t\t\t\t\t<span>{{ l10n.stringCancel }}</span>\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n\t\t\t</form>\n\t\t</div>\n\t',components:{"category-card":CategoryCard},props:["categories","categoryId","user","levels"],data:function(){return{category:{color:"",skills:[]},colors:["#ff4f4f","#ffb64f","#fffc4f","#a7ff4f","#4fff58","#4fffd9","#4fcdff","#4f78ff","#a14fff","#fc4fff","#ff4f8d"],l10n:{stringTitle:"",stringColor:"",stringConfirm:"",stringCancel:""}}},created:function(){var t=this;null!=this.categoryId?(this.category=JSON.parse(JSON.stringify(this.categories.find((function(i){return i.id==t.categoryId})))),-1==this.colors.indexOf(this.category.color)&&this.colors.push(this.category.color)):this.category.color=this.colors[Math.floor(Math.random()*this.colors.length)]},mounted:function(){this.$root.$refs.SugarL10n.localize(this.l10n)},methods:{onConfirm:function(){if(null!=this.categoryId){var t=this,i=this.categories.findIndex((function(i){return i.id===t.categoryId}));this.categories[i]=this.category}else this.addCategory();this.$emit("go-back-to","categories-grid")},addCategory:function(){var t=this.categories.length;this.category.id=t,this.categories.push(this.category),setTimeout((function(){content.scrollTop=content.scrollHeight}),250),this.$set(this.user.skills,t,new Object)}}},SkillSettings={template:'\n\t\t<div class="settings skill-settings">\n\t\t\t<skill-card \n\t\t\t\t:category="category"\n\t\t\t\t:skill="skill"\n\t\t\t\t:levels="levels"\n\t\t\t></skill-card>\n\t\t\t<form @submit.prevent="onConfirm">\n\t\t\t\t<div>\n\t\t\t\t\t<label for="title">{{ l10n.stringTitle }}</label>\n\t\t\t\t\t<input type="text" name="title" v-model="skill.title" required>\n\t\t\t\t</div>\n\t\t\t\t<div>\n\t\t\t\t\t<div class="image-label">\n\t\t\t\t\t\t<label for="image">{{ l10n.stringImage }}</label>\n\t\t\t\t\t\t<button type="button" id="image-edit-button" @click="onUploadClick"></button>\n\t\t\t\t\t</div>\n\t\t\t\t\t<img :src="skill.image">\n\t\t\t\t</div>\n\t\t\t\t<div class="buttons-row">\n\t\t\t\t\t<button type="submit" :disabled="skill.title == \'\'">\n\t\t\t\t\t\t<img src="icons/dialog-ok.svg">\n\t\t\t\t\t\t<span>{{ l10n.stringConfirm }}</span>\n\t\t\t\t\t</button>\n\t\t\t\t\t<button type="button" @click="$emit(\'go-back-to\', \'skills-grid\')">\n\t\t\t\t\t\t<img src="icons/dialog-cancel.svg">\n\t\t\t\t\t\t<span>{{ l10n.stringCancel }}</span>\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n\t\t\t</form>\n\t\t</div>\n\t',components:{"skill-card":SkillCard},props:["categories","categoryId","skillId","user","levels"],data:function(){return{category:{},skill:{title:"",image:"images/default.jpg"},l10n:{stringTitle:"",stringImage:"",stringConfirm:"",stringCancel:""}}},created:function(){var t=this;this.category=this.categories.find((function(i){return i.id==t.categoryId})),null!=this.skillId&&(this.skill=JSON.parse(JSON.stringify(this.category.skills.find((function(i){return i.id==t.skillId})))))},mounted:function(){this.$root.$refs.SugarL10n.localize(this.l10n)},methods:{onUploadClick:function(){var t=[{mimetype:"image/png"},{mimetype:"image/jpeg"},{activity:"org.olpcfrance.PaintActivity"}],i=this;requirejs(["sugar-web/datastore","sugar-web/graphics/journalchooser","activity/CurriculumChooser"],(function(n,e,o){e.init=function(){e.features=[e.featureLocalJournal],e.features.push(o),e.currentFeature=0},setTimeout((function(){e.show((function(t){if(t)if("org.olpcfrance.Curriculum"==t.metadata.activity)i.skill.image=t.path;else if(t.objectId){new n.DatastoreObject(t.objectId).loadAsText((function(t,n,e){t?console.error(t):"org.olpcfrance.PaintActivity"==n.activity?i.skill.image=i.$root.$refs.SugarJournal.LZString.decompressFromUTF16(JSON.parse(e).src):i.skill.image=e}))}}),t[0],t[1],t[2],t[3])}),0)}))},onConfirm:function(){var t=this,i=this.categories.findIndex((function(i){return i.id===t.categoryId}));if(null!=this.skillId){var n=this.categories[i].skills.findIndex((function(i){return i.id===t.skillId}));this.categories[i].skills[n]=this.skill}else this.addSkill(i);this.$emit("go-back-to","skills-grid")},addSkill:function(t){var i=this.categories[t].skills.length;this.skill.id=i,this.categories[t].skills.push(this.skill),setTimeout((function(){content.scrollTop=content.scrollHeight}),250),this.$set(this.user.skills[this.categoryId],i,{acquired:0,media:{}})}}};