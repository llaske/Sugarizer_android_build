enyo.kind({name:"enyo.Slideable",kind:"Control",published:{axis:"h",value:0,unit:"px",min:0,max:0,accelerated:"auto",overMoving:!0,draggable:!0},events:{onAnimateFinish:"",onChange:""},preventDragPropagation:!1,tools:[{kind:"Animator",onStep:"animatorStep",onEnd:"animatorComplete"}],handlers:{ondragstart:"dragstart",ondrag:"drag",ondragfinish:"dragfinish"},kDragScalar:1,dragEventProp:"dx",unitModifier:!1,canTransform:!1,create:function(){this.inherited(arguments),this.acceleratedChanged(),this.transformChanged(),this.axisChanged(),this.valueChanged(),this.addClass("enyo-slideable")},initComponents:function(){this.createComponents(this.tools),this.inherited(arguments)},rendered:function(){this.inherited(arguments),this.canModifyUnit(),this.updateDragScalar()},resizeHandler:function(){this.inherited(arguments),this.updateDragScalar()},canModifyUnit:function(){this.canTransform||this.getInitialStyleValue(this.hasNode(),this.boundary).match(/px/i)&&"%"===this.unit&&(this.unitModifier=this.getBounds()[this.dimension])},getInitialStyleValue:function(t,i){var n=enyo.dom.getComputedStyle(t);return n?n.getPropertyValue(i):t&&t.currentStyle?t.currentStyle[i]:"0"},updateBounds:function(t,i){var n={};n[this.boundary]=t,this.setBounds(n,this.unit),this.setInlineStyles(t,i)},updateDragScalar:function(){if("%"==this.unit){var t=this.getBounds()[this.dimension];this.kDragScalar=t?100/t:1,this.canTransform||this.updateBounds(this.value,100)}},transformChanged:function(){this.canTransform=enyo.dom.canTransform()},acceleratedChanged:function(){enyo.platform.android>2||enyo.dom.accelerate(this,this.accelerated)},axisChanged:function(){var t="h"==this.axis;this.dragMoveProp=t?"dx":"dy",this.shouldDragProp=t?"horizontal":"vertical",this.transform=t?"translateX":"translateY",this.dimension=t?"width":"height",this.boundary=t?"left":"top"},setInlineStyles:function(t,i){var n={};this.unitModifier?(n[this.boundary]=this.percentToPixels(t,this.unitModifier),n[this.dimension]=this.unitModifier,this.setBounds(n)):(i?n[this.dimension]=i:n[this.boundary]=t,this.setBounds(n,this.unit))},valueChanged:function(t){var i=this.value;this.isOob(i)&&!this.isAnimating()&&(this.value=this.overMoving?this.dampValue(i):this.clampValue(i)),enyo.platform.android>2&&(this.value?0!==t&&void 0!==t||enyo.dom.accelerate(this,this.accelerated):enyo.dom.accelerate(this,!1)),this.canTransform?enyo.dom.transformValue(this,this.transform,this.value+this.unit):this.setInlineStyles(this.value,!1),this.doChange()},getAnimator:function(){return this.$.animator},isAtMin:function(){return this.value<=this.calcMin()},isAtMax:function(){return this.value>=this.calcMax()},calcMin:function(){return this.min},calcMax:function(){return this.max},clampValue:function(t){var i=this.calcMin(),n=this.calcMax();return Math.max(i,Math.min(t,n))},dampValue:function(t){return this.dampBound(this.dampBound(t,this.min,1),this.max,-1)},dampBound:function(t,i,n){var a=t;return a*n<i*n&&(a=i+(a-i)/4),a},percentToPixels:function(t,i){return Math.floor(i/100*t)},pixelsToPercent:function(t){return t/(this.unitModifier?this.getBounds()[this.dimension]:this.container.getBounds()[this.dimension])*100},shouldDrag:function(t){return this.draggable&&t[this.shouldDragProp]},isOob:function(t){return t>this.calcMax()||t<this.calcMin()},dragstart:function(t,i){if(this.shouldDrag(i))return i.preventDefault(),this.$.animator.stop(),i.dragInfo={},this.dragging=!0,this.drag0=this.value,this.dragd0=0,this.preventDragPropagation},drag:function(t,i){if(this.dragging){i.preventDefault();var n=this.canTransform?i[this.dragMoveProp]*this.kDragScalar:this.pixelsToPercent(i[this.dragMoveProp]),a=this.drag0+n,e=n-this.dragd0;return this.dragd0=n,e&&(i.dragInfo.minimizing=e<0),this.setValue(a),this.preventDragPropagation}},dragfinish:function(t,i){if(this.dragging)return this.dragging=!1,this.completeDrag(i),i.preventTap(),this.preventDragPropagation},completeDrag:function(t){this.value!==this.calcMax()&&this.value!=this.calcMin()&&this.animateToMinMax(t.dragInfo.minimizing)},isAnimating:function(){return this.$.animator.isAnimating()},play:function(t,i){this.$.animator.play({startValue:t,endValue:i,node:this.hasNode()})},animateTo:function(t){this.play(this.value,t)},animateToMin:function(){this.animateTo(this.calcMin())},animateToMax:function(){this.animateTo(this.calcMax())},animateToMinMax:function(t){t?this.animateToMin():this.animateToMax()},animatorStep:function(t){return this.setValue(t.value),!0},animatorComplete:function(t){return this.doAnimateFinish(t),!0},toggleMinMax:function(){this.animateToMinMax(!this.isAtMin())}});