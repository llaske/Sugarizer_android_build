Vue.component("sugar-presence",{data:function(){return{activity:null,LZString:null,bundleId:"",palette:null,presence:null,isHost:!1}},mounted(){var e=this;requirejs(["sugar-web/activity/activity","sugar-web/env","lz-string"],(function(n,t,r){e.activity=n,e.LZString=r,t.getEnvironment((function(t,r){e.bundleId=r.bundleId,r.sharedId&&(console.log("Shared instance"),e.presence=n.getPresenceObject((function(n,t){n&&console.log(n),t.onDataReceived(e.onNetworkDataReceived),t.onSharedActivityUserChanged(e.onNetworkUserChanged)})))}))}))},methods:{isConnected:function(){return null!=this.presence},getSharedInfo:function(){return this.presence.getSharedInfo()},getUserInfo:function(){return this.presence.getUserInfo()},sendMessage:function(e){var n=this.LZString.compressToUTF16(JSON.stringify(e));this.presence.sendMessage(this.presence.getSharedInfo().id,n)},onShared:function(e,n){n.popDown();var t=this;console.log("Want to share"),this.presence=t.activity.getPresenceObject((function(e,n){e?console.log("Sharing error"):(n.createSharedActivity(t.bundleId,(function(e){console.log("Activity shared"),t.isHost=!0})),n.onDataReceived(t.onNetworkDataReceived),n.onSharedActivityUserChanged(t.onNetworkUserChanged))}))},onNetworkDataReceived:function(e){var n=JSON.parse(this.LZString.decompressFromUTF16(e));this.getUserInfo().networkId!==n.user.networkId&&this.$emit("data-received",n)},onNetworkUserChanged:function(e){this.getUserInfo().networkId!==e.user.networkId&&(this.$emit("user-changed",e),console.log("User "+e.user.name+" "+(1==e.move?"joined":"left")),this.$root.$refs.SugarPopup&&this.$root.$refs.SugarPopup.log("User "+e.user.name+" "+(1==e.move?"joined":"left")))}}});