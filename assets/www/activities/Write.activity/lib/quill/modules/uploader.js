import Delta from"quill-delta";import Emitter from"../core/emitter";import Module from"../core/module";class Uploader extends Module{constructor(e,t){super(e,t),e.root.addEventListener("drop",t=>{let o;if(t.preventDefault(),document.caretRangeFromPoint)o=document.caretRangeFromPoint(t.clientX,t.clientY);else{if(!document.caretPositionFromPoint)return;{const e=document.caretPositionFromPoint(t.clientX,t.clientY);o=document.createRange(),o.setStart(e.offsetNode,e.offset),o.setEnd(e.offsetNode,e.offset)}}const n=e.selection.normalizeNative(o),r=e.selection.normalizedToRange(n);this.upload(r,t.dataTransfer.files)})}upload(e,t){const o=[];Array.from(t).forEach(e=>{e&&this.options.mimetypes.includes(e.type)&&o.push(e)}),o.length>0&&this.options.handler.call(this,e,o)}}Uploader.DEFAULTS={mimetypes:["image/png","image/jpeg"],handler(e,t){const o=t.map(e=>new Promise(t=>{const o=new FileReader;o.onload=e=>{t(e.target.result)},o.readAsDataURL(e)}));Promise.all(o).then(t=>{const o=t.reduce((e,t)=>e.insert({image:t}),(new Delta).retain(e.index).delete(e.length));this.quill.updateContents(o,Emitter.sources.USER),this.quill.setSelection(e.index+t.length,Emitter.sources.SILENT)})}};export default Uploader;